a = "hello _ ( !"
a = "hello _ ( !"
a
" " in a
"  " in a
" )" in a
" (" in a
reticulate::repl_python()
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
allFileNames
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
allFileNames
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
dmsData_fileNames
x
x <- dmsData_fileNames[1]
print(x)
code_x_data <- read.csv(file = x, header = TRUE)
head(dmsData_fileNames)
head(code_x_data)
# merging data
for (x in dmsData_fileNames) {
print(x)
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
# merging data
for (x in dmsData_fileNames) {
print(x)
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
code_x_data
# merging data
for (x in dmsData_fileNames) {
print(x)
code_x_data <- read.csv(file = x, header = TRUE)
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
test_data <- data_merged[data_merged$practice=="False",]
unique_codes <- unique(test_data$pcode)
dmsData_fileNames
code_x_data
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
code_x_data
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
# merging data
for (x in dmsData_fileNames) {
print(x)
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
code_x_data
head(code_x_data)
x <- dmsData_fileNames[2]
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
head(code_x_data)
data_merged <- rbind(data_merged,code_x_data)
data_merged <- rbind(data_merged,code_x_data)
dim(x)
dim(code_x_data)
dim(data_merged)
head(data_merged)
x <-dmsData_fileNames[1]
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
dim(code_x_data)
dim(data_merged)
x <- dmsData_fileNames[2]
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
dim(code_x_data)
head(data_merged)
head(code_x_data)
data_merged <- rbind(data_merged,code_x_data)
data_merged
dim(data_merged)
# merging data
for (x in dmsData_fileNames) {
print(x)
code_x_data <- read.csv(file = x, header = TRUE, sep = ";")
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
# merging data
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==dmsData_fileNames[1]){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
# merging data
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
# merging data
code_x_data <- NULL
data_merged <- NULL
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
head(data_merged)
head(code_x_data)
x_name
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
# merging data
code_x_data <- NULL
data_merged <- NULL
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
x
x_name
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
# merging data
code_x_data <- NULL
data_merged <- NULL
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
x
x_name
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
# merging data
code_x_data <- NULL
data_merged <- NULL
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
x_name
# merging data
code_x_data <- NULL
data_merged <- NULL
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
test_data <- data_merged[data_merged$practice=="False",]
unique_codes <- unique(test_data$pcode)
N_sample <- length(unique_codes)
N_sample
test_data$queriedPosition <- NA
for (i in 1:nrow(test_data)) {
i_question <- test_data[i,"question"]
i_question_split <- c(unlist(strsplit(i_question,"")))
queriedPosition_i <- i_question_split[length(i_question_split)-1]
test_data[i,"queriedPosition"] <- queriedPosition_i
}
print(paste("Sample size: ",N_sample))
test_data
head(test_data)
unique_codes <- unique(test_data$p_code)
N_sample <- length(unique_codes)
test_data$queriedPosition <- NA
for (i in 1:nrow(test_data)) {
i_question <- test_data[i,"question"]
i_question_split <- c(unlist(strsplit(i_question,"")))
queriedPosition_i <- i_question_split[length(i_question_split)-1]
test_data[i,"queriedPosition"] <- queriedPosition_i
}
colnames(test_data)
i_question
i_question_split
queriedPosition_i
test_data[i,"queriedPosition"]
i
print(paste("Sample size: ",N_sample))
head(test_data)
# path_to_data <- "~/Dokumente/GitHub/STIWA/DMS_AccStim/Data/" # Raspberry pi
path_to_data <- "~/Documents/GitHub/STIWA/DMS_AccStim/Data_DMS_tactileOnly/"
setwd(path_to_data)
allFileNames <- list.files(path=path_to_data)
dmsData_ids <- as.vector(sapply(allFileNames,function(i){grepl("main",i)}))
dmsData_fileNames <- allFileNames[dmsData_ids]
# merging data
code_x_data <- NULL
data_merged <- NULL
for (x in c(1:length(dmsData_fileNames))) {
print(x)
x_name <- dmsData_fileNames[x]
code_x_data <- read.csv(file = x_name, header = TRUE, sep = ";")
if(x==1){data_merged <- code_x_data}else{
data_merged <- rbind(data_merged,code_x_data)
}
}
test_data <- data_merged[data_merged$practice=="False",]
unique_codes <- unique(test_data$p_code)
N_sample <- length(unique_codes)
test_data$queriedPosition <- NA
for (i in 1:nrow(test_data)) {
i_question <- test_data[i,"question"]
i_question_split <- c(unlist(strsplit(i_question,"")))
queriedPosition_i <- i_question_split[length(i_question_split)-1]
test_data[i,"queriedPosition"] <- queriedPosition_i
}
print(paste("Sample size: ",N_sample))
code_i <- 1
curCode <- unique_codes[code_i]
curCode
curCodeData <- test_data[test_data$pcode==curCode,]
pts_x_trials <- curCodeData$PTS==pts
colnames(curCodeData)
pts_x_trials <- curCodeData$PTS==Same_orDiff
pts_x_trials <- curCodeData$PTS==Same_or_Diff
pts
pts <- "Same";tns <- "low"; question <- "P = T1?"; targetPos=2;accPos=1;queriedPos=1;
pts_x_trials <- curCodeData$Same_or_Diff==pts
pts_x_trials
curCodeData$Same_or_Diff
curCodeData
curCode <- unique_codes[code_i]
curCodeData <- test_data[test_data$pcode==curCode,]
curCodeData
test_data
curCodeData <- test_data[test_data$p_code==curCode,]
curCodeData
pts_x_trials <- curCodeData$Same_or_Diff==pts
pts_x_trials
tns_x_trials <- curCodeData$TNS==tns
tns_x_trials
colnames(curCodeData)
tns_x_trials <- curCodeData$TNS==ITS
tns_x_trials <- curCodeData$ITS==tns
tns_x_trials
question_x_trials <- curCodeData$question==question
question_x_trials
targetPos_x_trials <- curCodeData$TargetPosition==targetPos
targetPos_x_trials
curCodeData$seqPos
targetPos_x_trials <- curCodeData$seqPos==targetPos
targetPos_x_trials
queriedPos_x_trials <- curCodeData$queriedPosition==queriedPos
queriedPos_x_trials
curCode_condiData <- curCodeData[(pts_x_trials&tns_x_trials&question_x_trials&
targetPos_x_trials&queriedPos_x_trials),]
head(curCode_condiData)
